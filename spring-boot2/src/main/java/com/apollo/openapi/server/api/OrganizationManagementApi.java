/*
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech) (7.15.0).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
package com.apollo.openapi.server.api;

import com.apollo.openapi.server.model.OpenOrganizationDto;
import com.apollo.openapi.server.model.OpenapiV1AppsGet401Response;
import io.swagger.v3.oas.annotations.ExternalDocumentation;
import io.swagger.v3.oas.annotations.Operation;
import io.swagger.v3.oas.annotations.Parameter;
import io.swagger.v3.oas.annotations.Parameters;
import io.swagger.v3.oas.annotations.media.ArraySchema;
import io.swagger.v3.oas.annotations.media.Content;
import io.swagger.v3.oas.annotations.media.Schema;
import io.swagger.v3.oas.annotations.responses.ApiResponse;
import io.swagger.v3.oas.annotations.security.SecurityRequirement;
import io.swagger.v3.oas.annotations.tags.Tag;
import io.swagger.v3.oas.annotations.enums.ParameterIn;
import io.swagger.v3.oas.annotations.media.ExampleObject;
import org.springframework.lang.Nullable;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.*;
import org.springframework.web.multipart.MultipartFile;

import javax.validation.Valid;
import javax.validation.constraints.*;
import java.util.List;
import java.util.Map;
import javax.annotation.Generated;

@Generated(value = "org.openapitools.codegen.languages.SpringCodegen", date = "2025-09-14T16:24:28.369117+08:00[Asia/Shanghai]", comments = "Generator version: 7.15.0")
@Validated
@Tag(name = "Organization Management", description = "组织管理相关接口，包括组织信息查询等功能")
public interface OrganizationManagementApi {

    default OrganizationManagementApiDelegate getDelegate() {
        return new OrganizationManagementApiDelegate() {};
    }

    public static final String PATH_OPENAPI_V1_ORGANIZATIONS_GET = "/openapi/v1/organizations";
    /**
     * GET /openapi/v1/organizations : 获取所有组织信息
     * GET /openapi/v1/organizations
     *
     * @return 成功获取组织列表 (status code 200)
     *         or 未授权访问 (status code 401)
     */
    @Operation(
        operationId = "openapiV1OrganizationsGet",
        summary = "获取所有组织信息",
        description = "GET /openapi/v1/organizations",
        tags = { "Organization Management" },
        responses = {
            @ApiResponse(responseCode = "200", description = "成功获取组织列表", content = {
                @Content(mediaType = "application/json", array = @ArraySchema(schema = @Schema(implementation = OpenOrganizationDto.class)))
            }),
            @ApiResponse(responseCode = "401", description = "未授权访问", content = {
                @Content(mediaType = "application/json", schema = @Schema(implementation = OpenapiV1AppsGet401Response.class))
            })
        },
        security = {
            @SecurityRequirement(name = "ApiKeyAuth")
        }
    )
    @RequestMapping(
        method = RequestMethod.GET,
        value = OrganizationManagementApi.PATH_OPENAPI_V1_ORGANIZATIONS_GET,
        produces = { "application/json" }
    )
    
    default ResponseEntity<List<OpenOrganizationDto>> openapiV1OrganizationsGet(
        
    ) {
        return getDelegate().openapiV1OrganizationsGet();
    }

}
