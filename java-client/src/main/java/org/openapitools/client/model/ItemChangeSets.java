/*
 * Apollo OpenAPI
 * Apollo配置中心OpenAPI接口文档  ## 认证方式  所有API接口都需要通过Authorization header进行身份验证。  ### 获取Token的方式：  1. **Portal管理界面获取**：    - 登录Apollo Portal管理界面    - 进入\"管理员工具\" -> \"开放平台授权管理\"    - 创建第三方应用，获取Token  2. **Token格式**：    ```    Authorization: token_value    ```  3. **Token权限**：    - Token具有对应应用的读写权限    - 不同Token可能有不同的环境和命名空间权限    - 建议为不同用途创建不同的Token  ### 使用示例： ```bash curl -X GET \"http://localhost:8070/openapi/v1/apps\" \\      -H \"Authorization: your_token_here\" ``` 
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.ItemDTO;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * ItemChangeSets
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-09-14T16:24:26.137229+08:00[Asia/Shanghai]", comments = "Generator version: 7.15.0")
public class ItemChangeSets {
  public static final String SERIALIZED_NAME_DATA_CHANGE_CREATED_BY = "dataChangeCreatedBy";
  @SerializedName(SERIALIZED_NAME_DATA_CHANGE_CREATED_BY)
  @javax.annotation.Nullable
  private String dataChangeCreatedBy;

  public static final String SERIALIZED_NAME_DATA_CHANGE_LAST_MODIFIED_BY = "dataChangeLastModifiedBy";
  @SerializedName(SERIALIZED_NAME_DATA_CHANGE_LAST_MODIFIED_BY)
  @javax.annotation.Nullable
  private String dataChangeLastModifiedBy;

  public static final String SERIALIZED_NAME_DATA_CHANGE_CREATED_BY_DISPLAY_NAME = "dataChangeCreatedByDisplayName";
  @SerializedName(SERIALIZED_NAME_DATA_CHANGE_CREATED_BY_DISPLAY_NAME)
  @javax.annotation.Nullable
  private String dataChangeCreatedByDisplayName;

  public static final String SERIALIZED_NAME_DATA_CHANGE_LAST_MODIFIED_BY_DISPLAY_NAME = "dataChangeLastModifiedByDisplayName";
  @SerializedName(SERIALIZED_NAME_DATA_CHANGE_LAST_MODIFIED_BY_DISPLAY_NAME)
  @javax.annotation.Nullable
  private String dataChangeLastModifiedByDisplayName;

  public static final String SERIALIZED_NAME_DATA_CHANGE_CREATED_TIME = "dataChangeCreatedTime";
  @SerializedName(SERIALIZED_NAME_DATA_CHANGE_CREATED_TIME)
  @javax.annotation.Nullable
  private String dataChangeCreatedTime;

  public static final String SERIALIZED_NAME_DATA_CHANGE_LAST_MODIFIED_TIME = "dataChangeLastModifiedTime";
  @SerializedName(SERIALIZED_NAME_DATA_CHANGE_LAST_MODIFIED_TIME)
  @javax.annotation.Nullable
  private String dataChangeLastModifiedTime;

  public static final String SERIALIZED_NAME_CREATE_ITEMS = "createItems";
  @SerializedName(SERIALIZED_NAME_CREATE_ITEMS)
  @javax.annotation.Nullable
  private List<ItemDTO> createItems = new ArrayList<>();

  public static final String SERIALIZED_NAME_UPDATE_ITEMS = "updateItems";
  @SerializedName(SERIALIZED_NAME_UPDATE_ITEMS)
  @javax.annotation.Nullable
  private List<ItemDTO> updateItems = new ArrayList<>();

  public static final String SERIALIZED_NAME_DELETE_ITEMS = "deleteItems";
  @SerializedName(SERIALIZED_NAME_DELETE_ITEMS)
  @javax.annotation.Nullable
  private List<ItemDTO> deleteItems = new ArrayList<>();

  public ItemChangeSets() {
  }

  public ItemChangeSets dataChangeCreatedBy(@javax.annotation.Nullable String dataChangeCreatedBy) {
    this.dataChangeCreatedBy = dataChangeCreatedBy;
    return this;
  }

  /**
   * 
   * @return dataChangeCreatedBy
   */
  @javax.annotation.Nullable
  public String getDataChangeCreatedBy() {
    return dataChangeCreatedBy;
  }

  public void setDataChangeCreatedBy(@javax.annotation.Nullable String dataChangeCreatedBy) {
    this.dataChangeCreatedBy = dataChangeCreatedBy;
  }


  public ItemChangeSets dataChangeLastModifiedBy(@javax.annotation.Nullable String dataChangeLastModifiedBy) {
    this.dataChangeLastModifiedBy = dataChangeLastModifiedBy;
    return this;
  }

  /**
   * 
   * @return dataChangeLastModifiedBy
   */
  @javax.annotation.Nullable
  public String getDataChangeLastModifiedBy() {
    return dataChangeLastModifiedBy;
  }

  public void setDataChangeLastModifiedBy(@javax.annotation.Nullable String dataChangeLastModifiedBy) {
    this.dataChangeLastModifiedBy = dataChangeLastModifiedBy;
  }


  public ItemChangeSets dataChangeCreatedByDisplayName(@javax.annotation.Nullable String dataChangeCreatedByDisplayName) {
    this.dataChangeCreatedByDisplayName = dataChangeCreatedByDisplayName;
    return this;
  }

  /**
   * 
   * @return dataChangeCreatedByDisplayName
   */
  @javax.annotation.Nullable
  public String getDataChangeCreatedByDisplayName() {
    return dataChangeCreatedByDisplayName;
  }

  public void setDataChangeCreatedByDisplayName(@javax.annotation.Nullable String dataChangeCreatedByDisplayName) {
    this.dataChangeCreatedByDisplayName = dataChangeCreatedByDisplayName;
  }


  public ItemChangeSets dataChangeLastModifiedByDisplayName(@javax.annotation.Nullable String dataChangeLastModifiedByDisplayName) {
    this.dataChangeLastModifiedByDisplayName = dataChangeLastModifiedByDisplayName;
    return this;
  }

  /**
   * 
   * @return dataChangeLastModifiedByDisplayName
   */
  @javax.annotation.Nullable
  public String getDataChangeLastModifiedByDisplayName() {
    return dataChangeLastModifiedByDisplayName;
  }

  public void setDataChangeLastModifiedByDisplayName(@javax.annotation.Nullable String dataChangeLastModifiedByDisplayName) {
    this.dataChangeLastModifiedByDisplayName = dataChangeLastModifiedByDisplayName;
  }


  public ItemChangeSets dataChangeCreatedTime(@javax.annotation.Nullable String dataChangeCreatedTime) {
    this.dataChangeCreatedTime = dataChangeCreatedTime;
    return this;
  }

  /**
   * 
   * @return dataChangeCreatedTime
   */
  @javax.annotation.Nullable
  public String getDataChangeCreatedTime() {
    return dataChangeCreatedTime;
  }

  public void setDataChangeCreatedTime(@javax.annotation.Nullable String dataChangeCreatedTime) {
    this.dataChangeCreatedTime = dataChangeCreatedTime;
  }


  public ItemChangeSets dataChangeLastModifiedTime(@javax.annotation.Nullable String dataChangeLastModifiedTime) {
    this.dataChangeLastModifiedTime = dataChangeLastModifiedTime;
    return this;
  }

  /**
   * 
   * @return dataChangeLastModifiedTime
   */
  @javax.annotation.Nullable
  public String getDataChangeLastModifiedTime() {
    return dataChangeLastModifiedTime;
  }

  public void setDataChangeLastModifiedTime(@javax.annotation.Nullable String dataChangeLastModifiedTime) {
    this.dataChangeLastModifiedTime = dataChangeLastModifiedTime;
  }


  public ItemChangeSets createItems(@javax.annotation.Nullable List<ItemDTO> createItems) {
    this.createItems = createItems;
    return this;
  }

  public ItemChangeSets addCreateItemsItem(ItemDTO createItemsItem) {
    if (this.createItems == null) {
      this.createItems = new ArrayList<>();
    }
    this.createItems.add(createItemsItem);
    return this;
  }

  /**
   * 
   * @return createItems
   */
  @javax.annotation.Nullable
  public List<ItemDTO> getCreateItems() {
    return createItems;
  }

  public void setCreateItems(@javax.annotation.Nullable List<ItemDTO> createItems) {
    this.createItems = createItems;
  }


  public ItemChangeSets updateItems(@javax.annotation.Nullable List<ItemDTO> updateItems) {
    this.updateItems = updateItems;
    return this;
  }

  public ItemChangeSets addUpdateItemsItem(ItemDTO updateItemsItem) {
    if (this.updateItems == null) {
      this.updateItems = new ArrayList<>();
    }
    this.updateItems.add(updateItemsItem);
    return this;
  }

  /**
   * 
   * @return updateItems
   */
  @javax.annotation.Nullable
  public List<ItemDTO> getUpdateItems() {
    return updateItems;
  }

  public void setUpdateItems(@javax.annotation.Nullable List<ItemDTO> updateItems) {
    this.updateItems = updateItems;
  }


  public ItemChangeSets deleteItems(@javax.annotation.Nullable List<ItemDTO> deleteItems) {
    this.deleteItems = deleteItems;
    return this;
  }

  public ItemChangeSets addDeleteItemsItem(ItemDTO deleteItemsItem) {
    if (this.deleteItems == null) {
      this.deleteItems = new ArrayList<>();
    }
    this.deleteItems.add(deleteItemsItem);
    return this;
  }

  /**
   * 
   * @return deleteItems
   */
  @javax.annotation.Nullable
  public List<ItemDTO> getDeleteItems() {
    return deleteItems;
  }

  public void setDeleteItems(@javax.annotation.Nullable List<ItemDTO> deleteItems) {
    this.deleteItems = deleteItems;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ItemChangeSets itemChangeSets = (ItemChangeSets) o;
    return Objects.equals(this.dataChangeCreatedBy, itemChangeSets.dataChangeCreatedBy) &&
        Objects.equals(this.dataChangeLastModifiedBy, itemChangeSets.dataChangeLastModifiedBy) &&
        Objects.equals(this.dataChangeCreatedByDisplayName, itemChangeSets.dataChangeCreatedByDisplayName) &&
        Objects.equals(this.dataChangeLastModifiedByDisplayName, itemChangeSets.dataChangeLastModifiedByDisplayName) &&
        Objects.equals(this.dataChangeCreatedTime, itemChangeSets.dataChangeCreatedTime) &&
        Objects.equals(this.dataChangeLastModifiedTime, itemChangeSets.dataChangeLastModifiedTime) &&
        Objects.equals(this.createItems, itemChangeSets.createItems) &&
        Objects.equals(this.updateItems, itemChangeSets.updateItems) &&
        Objects.equals(this.deleteItems, itemChangeSets.deleteItems);
  }

  @Override
  public int hashCode() {
    return Objects.hash(dataChangeCreatedBy, dataChangeLastModifiedBy, dataChangeCreatedByDisplayName, dataChangeLastModifiedByDisplayName, dataChangeCreatedTime, dataChangeLastModifiedTime, createItems, updateItems, deleteItems);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ItemChangeSets {\n");
    sb.append("    dataChangeCreatedBy: ").append(toIndentedString(dataChangeCreatedBy)).append("\n");
    sb.append("    dataChangeLastModifiedBy: ").append(toIndentedString(dataChangeLastModifiedBy)).append("\n");
    sb.append("    dataChangeCreatedByDisplayName: ").append(toIndentedString(dataChangeCreatedByDisplayName)).append("\n");
    sb.append("    dataChangeLastModifiedByDisplayName: ").append(toIndentedString(dataChangeLastModifiedByDisplayName)).append("\n");
    sb.append("    dataChangeCreatedTime: ").append(toIndentedString(dataChangeCreatedTime)).append("\n");
    sb.append("    dataChangeLastModifiedTime: ").append(toIndentedString(dataChangeLastModifiedTime)).append("\n");
    sb.append("    createItems: ").append(toIndentedString(createItems)).append("\n");
    sb.append("    updateItems: ").append(toIndentedString(updateItems)).append("\n");
    sb.append("    deleteItems: ").append(toIndentedString(deleteItems)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>(Arrays.asList("dataChangeCreatedBy", "dataChangeLastModifiedBy", "dataChangeCreatedByDisplayName", "dataChangeLastModifiedByDisplayName", "dataChangeCreatedTime", "dataChangeLastModifiedTime", "createItems", "updateItems", "deleteItems"));

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>(0);
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to ItemChangeSets
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!ItemChangeSets.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in ItemChangeSets is not found in the empty JSON string", ItemChangeSets.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!ItemChangeSets.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `ItemChangeSets` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("dataChangeCreatedBy") != null && !jsonObj.get("dataChangeCreatedBy").isJsonNull()) && !jsonObj.get("dataChangeCreatedBy").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `dataChangeCreatedBy` to be a primitive type in the JSON string but got `%s`", jsonObj.get("dataChangeCreatedBy").toString()));
      }
      if ((jsonObj.get("dataChangeLastModifiedBy") != null && !jsonObj.get("dataChangeLastModifiedBy").isJsonNull()) && !jsonObj.get("dataChangeLastModifiedBy").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `dataChangeLastModifiedBy` to be a primitive type in the JSON string but got `%s`", jsonObj.get("dataChangeLastModifiedBy").toString()));
      }
      if ((jsonObj.get("dataChangeCreatedByDisplayName") != null && !jsonObj.get("dataChangeCreatedByDisplayName").isJsonNull()) && !jsonObj.get("dataChangeCreatedByDisplayName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `dataChangeCreatedByDisplayName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("dataChangeCreatedByDisplayName").toString()));
      }
      if ((jsonObj.get("dataChangeLastModifiedByDisplayName") != null && !jsonObj.get("dataChangeLastModifiedByDisplayName").isJsonNull()) && !jsonObj.get("dataChangeLastModifiedByDisplayName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `dataChangeLastModifiedByDisplayName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("dataChangeLastModifiedByDisplayName").toString()));
      }
      if ((jsonObj.get("dataChangeCreatedTime") != null && !jsonObj.get("dataChangeCreatedTime").isJsonNull()) && !jsonObj.get("dataChangeCreatedTime").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `dataChangeCreatedTime` to be a primitive type in the JSON string but got `%s`", jsonObj.get("dataChangeCreatedTime").toString()));
      }
      if ((jsonObj.get("dataChangeLastModifiedTime") != null && !jsonObj.get("dataChangeLastModifiedTime").isJsonNull()) && !jsonObj.get("dataChangeLastModifiedTime").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `dataChangeLastModifiedTime` to be a primitive type in the JSON string but got `%s`", jsonObj.get("dataChangeLastModifiedTime").toString()));
      }
      if (jsonObj.get("createItems") != null && !jsonObj.get("createItems").isJsonNull()) {
        JsonArray jsonArraycreateItems = jsonObj.getAsJsonArray("createItems");
        if (jsonArraycreateItems != null) {
          // ensure the json data is an array
          if (!jsonObj.get("createItems").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `createItems` to be an array in the JSON string but got `%s`", jsonObj.get("createItems").toString()));
          }

          // validate the optional field `createItems` (array)
          for (int i = 0; i < jsonArraycreateItems.size(); i++) {
            ItemDTO.validateJsonElement(jsonArraycreateItems.get(i));
          };
        }
      }
      if (jsonObj.get("updateItems") != null && !jsonObj.get("updateItems").isJsonNull()) {
        JsonArray jsonArrayupdateItems = jsonObj.getAsJsonArray("updateItems");
        if (jsonArrayupdateItems != null) {
          // ensure the json data is an array
          if (!jsonObj.get("updateItems").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `updateItems` to be an array in the JSON string but got `%s`", jsonObj.get("updateItems").toString()));
          }

          // validate the optional field `updateItems` (array)
          for (int i = 0; i < jsonArrayupdateItems.size(); i++) {
            ItemDTO.validateJsonElement(jsonArrayupdateItems.get(i));
          };
        }
      }
      if (jsonObj.get("deleteItems") != null && !jsonObj.get("deleteItems").isJsonNull()) {
        JsonArray jsonArraydeleteItems = jsonObj.getAsJsonArray("deleteItems");
        if (jsonArraydeleteItems != null) {
          // ensure the json data is an array
          if (!jsonObj.get("deleteItems").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `deleteItems` to be an array in the JSON string but got `%s`", jsonObj.get("deleteItems").toString()));
          }

          // validate the optional field `deleteItems` (array)
          for (int i = 0; i < jsonArraydeleteItems.size(); i++) {
            ItemDTO.validateJsonElement(jsonArraydeleteItems.get(i));
          };
        }
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!ItemChangeSets.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'ItemChangeSets' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<ItemChangeSets> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(ItemChangeSets.class));

       return (TypeAdapter<T>) new TypeAdapter<ItemChangeSets>() {
           @Override
           public void write(JsonWriter out, ItemChangeSets value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public ItemChangeSets read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of ItemChangeSets given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of ItemChangeSets
   * @throws IOException if the JSON string is invalid with respect to ItemChangeSets
   */
  public static ItemChangeSets fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, ItemChangeSets.class);
  }

  /**
   * Convert an instance of ItemChangeSets to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

