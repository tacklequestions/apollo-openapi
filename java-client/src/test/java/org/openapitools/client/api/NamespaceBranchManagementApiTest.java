/*
 * Apollo OpenAPI
 * Apollo配置中心OpenAPI接口文档  ## 认证方式  所有API接口都需要通过Authorization header进行身份验证。  ### 获取Token的方式：  1. **Portal管理界面获取**：    - 登录Apollo Portal管理界面    - 进入\"管理员工具\" -> \"开放平台授权管理\"    - 创建第三方应用，获取Token  2. **Token格式**：    ```    Authorization: token_value    ```  3. **Token权限**：    - Token具有对应应用的读写权限    - 不同Token可能有不同的环境和命名空间权限    - 建议为不同用途创建不同的Token  ### 使用示例： ```bash curl -X GET \"http://localhost:8070/openapi/v1/apps\" \\      -H \"Authorization: your_token_here\" ``` 
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.NamespaceGrayDelReleaseDTO;
import org.openapitools.client.model.NamespaceReleaseDTO;
import org.openapitools.client.model.OpenGrayReleaseRuleDTO;
import org.openapitools.client.model.OpenItemDTO;
import org.openapitools.client.model.OpenNamespaceDTO;
import org.openapitools.client.model.OpenReleaseDTO;
import org.openapitools.client.model.OpenapiV1AppsGet401Response;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for NamespaceBranchManagementApi
 */
@Disabled
public class NamespaceBranchManagementApiTest {

    private final NamespaceBranchManagementApi api = new NamespaceBranchManagementApi();

    /**
     * 创建命名空间分支
     *
     * POST /openapi/v1/envs/{env}/apps/{appId}/clusters/{clusterName}/namespaces/{namespaceName}/branch
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void openapiV1EnvsEnvAppsAppIdClustersClusterNameNamespacesNamespaceNameBranchPostTest() throws ApiException {
        String appId = null;
        String env = null;
        String clusterName = null;
        String namespaceName = null;
        String operator = null;
        OpenNamespaceDTO response = api.openapiV1EnvsEnvAppsAppIdClustersClusterNameNamespacesNamespaceNameBranchPost(appId, env, clusterName, namespaceName, operator);
        // TODO: test validations
    }

    /**
     * 删除命名空间分支
     *
     * DELETE /openapi/v1/envs/{env}/apps/{appId}/clusters/{clusterName}/namespaces/{namespaceName}/branches/{branchName}
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void openapiV1EnvsEnvAppsAppIdClustersClusterNameNamespacesNamespaceNameBranchesBranchNameDeleteTest() throws ApiException {
        String env = null;
        String appId = null;
        String clusterName = null;
        String namespaceName = null;
        String branchName = null;
        String operator = null;
        Object response = api.openapiV1EnvsEnvAppsAppIdClustersClusterNameNamespacesNamespaceNameBranchesBranchNameDelete(env, appId, clusterName, namespaceName, branchName, operator);
        // TODO: test validations
    }

    /**
     * 创建灰度删除发布
     *
     * 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void openapiV1EnvsEnvAppsAppIdClustersClusterNameNamespacesNamespaceNameBranchesBranchNameGrayDelReleasesPostTest() throws ApiException {
        String appId = null;
        String env = null;
        String clusterName = null;
        String namespaceName = null;
        String branchName = null;
        NamespaceGrayDelReleaseDTO namespaceGrayDelReleaseDTO = null;
        OpenReleaseDTO response = api.openapiV1EnvsEnvAppsAppIdClustersClusterNameNamespacesNamespaceNameBranchesBranchNameGrayDelReleasesPost(appId, env, clusterName, namespaceName, branchName, namespaceGrayDelReleaseDTO);
        // TODO: test validations
    }

    /**
     * 获取分支灰度发布规则
     *
     * GET /openapi/v1/envs/{env}/apps/{appId}/clusters/{clusterName}/namespaces/{namespaceName}/branches/{branchName}/gray-rules
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void openapiV1EnvsEnvAppsAppIdClustersClusterNameNamespacesNamespaceNameBranchesBranchNameGrayRulesGetTest() throws ApiException {
        String appId = null;
        String env = null;
        String clusterName = null;
        String namespaceName = null;
        String branchName = null;
        OpenGrayReleaseRuleDTO response = api.openapiV1EnvsEnvAppsAppIdClustersClusterNameNamespacesNamespaceNameBranchesBranchNameGrayRulesGet(appId, env, clusterName, namespaceName, branchName);
        // TODO: test validations
    }

    /**
     * 更新分支灰度发布规则
     *
     * PUT /openapi/v1/envs/{env}/apps/{appId}/clusters/{clusterName}/namespaces/{namespaceName}/branches/{branchName}/gray-rules
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void openapiV1EnvsEnvAppsAppIdClustersClusterNameNamespacesNamespaceNameBranchesBranchNameGrayRulesPutTest() throws ApiException {
        String appId = null;
        String env = null;
        String clusterName = null;
        String namespaceName = null;
        String branchName = null;
        String operator = null;
        OpenGrayReleaseRuleDTO openGrayReleaseRuleDTO = null;
        Object response = api.openapiV1EnvsEnvAppsAppIdClustersClusterNameNamespacesNamespaceNameBranchesBranchNameGrayRulesPut(appId, env, clusterName, namespaceName, branchName, operator, openGrayReleaseRuleDTO);
        // TODO: test validations
    }

    /**
     * 获取分支下的配置项
     *
     * GET /apps/{appId}/clusters/{clusterName}/namespaces/{namespaceName}/branches/{branchName}/items
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void openapiV1EnvsEnvAppsAppIdClustersClusterNameNamespacesNamespaceNameBranchesBranchNameItemsGetTest() throws ApiException {
        String appId = null;
        String env = null;
        String clusterName = null;
        String namespaceName = null;
        String branchName = null;
        List<OpenItemDTO> response = api.openapiV1EnvsEnvAppsAppIdClustersClusterNameNamespacesNamespaceNameBranchesBranchNameItemsGet(appId, env, clusterName, namespaceName, branchName);
        // TODO: test validations
    }

    /**
     * 合并分支
     *
     * 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void openapiV1EnvsEnvAppsAppIdClustersClusterNameNamespacesNamespaceNameBranchesBranchNameMergePostTest() throws ApiException {
        String appId = null;
        String env = null;
        String clusterName = null;
        String namespaceName = null;
        String branchName = null;
        Boolean deleteBranch = null;
        NamespaceReleaseDTO namespaceReleaseDTO = null;
        OpenReleaseDTO response = api.openapiV1EnvsEnvAppsAppIdClustersClusterNameNamespacesNamespaceNameBranchesBranchNameMergePost(appId, env, clusterName, namespaceName, branchName, deleteBranch, namespaceReleaseDTO);
        // TODO: test validations
    }

    /**
     * 合并分支到主分支
     *
     * PATCH /openapi/v1/envs/{env}/apps/{appId}/clusters/{clusterName}/namespaces/{namespaceName}/branches/{branchName}  使用 PATCH 方法表示部分更新操作（将分支状态从\&quot;独立\&quot;更新为\&quot;合并\&quot;）
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void openapiV1EnvsEnvAppsAppIdClustersClusterNameNamespacesNamespaceNameBranchesBranchNamePatchTest() throws ApiException {
        String env = null;
        String appId = null;
        String clusterName = null;
        String namespaceName = null;
        String branchName = null;
        Boolean deleteBranch = null;
        String xApolloOperator = null;
        NamespaceReleaseDTO namespaceReleaseDTO = null;
        OpenReleaseDTO response = api.openapiV1EnvsEnvAppsAppIdClustersClusterNameNamespacesNamespaceNameBranchesBranchNamePatch(env, appId, clusterName, namespaceName, branchName, deleteBranch, xApolloOperator, namespaceReleaseDTO);
        // TODO: test validations
    }

    /**
     * 创建灰度发布
     *
     * 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void openapiV1EnvsEnvAppsAppIdClustersClusterNameNamespacesNamespaceNameBranchesBranchNameReleasesPostTest() throws ApiException {
        String appId = null;
        String env = null;
        String clusterName = null;
        String namespaceName = null;
        String branchName = null;
        NamespaceReleaseDTO namespaceReleaseDTO = null;
        OpenReleaseDTO response = api.openapiV1EnvsEnvAppsAppIdClustersClusterNameNamespacesNamespaceNameBranchesBranchNameReleasesPost(appId, env, clusterName, namespaceName, branchName, namespaceReleaseDTO);
        // TODO: test validations
    }

}
