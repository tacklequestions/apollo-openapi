/*
 * Apollo OpenAPI
 * Apollo配置中心OpenAPI接口文档  ## 认证方式  所有API接口都需要通过Authorization header进行身份验证。  ### 获取Token的方式：  1. **Portal管理界面获取**：    - 登录Apollo Portal管理界面    - 进入\"管理员工具\" -> \"开放平台授权管理\"    - 创建第三方应用，获取Token  2. **Token格式**：    ```    Authorization: token_value    ```  3. **Token权限**：    - Token具有对应应用的读写权限    - 不同Token可能有不同的环境和命名空间权限    - 建议为不同用途创建不同的Token  ### 使用示例： ```bash curl -X GET \"http://localhost:8070/openapi/v1/apps\" \\      -H \"Authorization: your_token_here\" ``` 
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.OpenOrganizationDto;
import org.openapitools.client.model.OpenapiV1AppsGet401Response;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for OrganizationManagementApi
 */
@Disabled
public class OrganizationManagementApiTest {

    private final OrganizationManagementApi api = new OrganizationManagementApi();

    /**
     * 获取所有组织信息
     *
     * GET /openapi/v1/organizations
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void openapiV1OrganizationsGetTest() throws ApiException {
        List<OpenOrganizationDto> response = api.openapiV1OrganizationsGet();
        // TODO: test validations
    }

}
