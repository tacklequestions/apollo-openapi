/*
 * Apollo OpenAPI
 * Apollo配置中心OpenAPI接口文档  ## 认证方式  所有API接口都需要通过Authorization header进行身份验证。  ### 获取Token的方式：  1. **Portal管理界面获取**：    - 登录Apollo Portal管理界面    - 进入\"管理员工具\" -> \"开放平台授权管理\"    - 创建第三方应用，获取Token  2. **Token格式**：    ```    Authorization: token_value    ```  3. **Token权限**：    - Token具有对应应用的读写权限    - 不同Token可能有不同的环境和命名空间权限    - 建议为不同用途创建不同的Token  ### 使用示例： ```bash curl -X GET \"http://localhost:8070/openapi/v1/apps\" \\      -H \"Authorization: your_token_here\" ``` 
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Apollo灰度发布规则项数据传输对象，表示灰度发布的具体规则条件
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-09-14T15:38:42.175795+08:00[Asia/Shanghai]", comments = "Generator version: 7.15.0")
public class OpenGrayReleaseRuleItemDTO {
  public static final String SERIALIZED_NAME_CLIENT_APP_ID = "clientAppId";
  @SerializedName(SERIALIZED_NAME_CLIENT_APP_ID)
  @javax.annotation.Nullable
  private String clientAppId;

  public static final String SERIALIZED_NAME_CLIENT_IP_LIST = "clientIpList";
  @SerializedName(SERIALIZED_NAME_CLIENT_IP_LIST)
  @javax.annotation.Nullable
  private List<String> clientIpList = new ArrayList<>();

  public static final String SERIALIZED_NAME_CLIENT_LABEL_LIST = "clientLabelList";
  @SerializedName(SERIALIZED_NAME_CLIENT_LABEL_LIST)
  @javax.annotation.Nullable
  private List<String> clientLabelList = new ArrayList<>();

  public OpenGrayReleaseRuleItemDTO() {
  }

  public OpenGrayReleaseRuleItemDTO clientAppId(@javax.annotation.Nullable String clientAppId) {
    this.clientAppId = clientAppId;
    return this;
  }

  /**
   * 客户端应用ID，指定哪个应用可以获取灰度配置
   * @return clientAppId
   */
  @javax.annotation.Nullable
  public String getClientAppId() {
    return clientAppId;
  }

  public void setClientAppId(@javax.annotation.Nullable String clientAppId) {
    this.clientAppId = clientAppId;
  }


  public OpenGrayReleaseRuleItemDTO clientIpList(@javax.annotation.Nullable List<String> clientIpList) {
    this.clientIpList = clientIpList;
    return this;
  }

  public OpenGrayReleaseRuleItemDTO addClientIpListItem(String clientIpListItem) {
    if (this.clientIpList == null) {
      this.clientIpList = new ArrayList<>();
    }
    this.clientIpList.add(clientIpListItem);
    return this;
  }

  /**
   * 客户端IP地址列表，指定哪些IP地址可以获取灰度配置
   * @return clientIpList
   */
  @javax.annotation.Nullable
  public List<String> getClientIpList() {
    return clientIpList;
  }

  public void setClientIpList(@javax.annotation.Nullable List<String> clientIpList) {
    this.clientIpList = clientIpList;
  }


  public OpenGrayReleaseRuleItemDTO clientLabelList(@javax.annotation.Nullable List<String> clientLabelList) {
    this.clientLabelList = clientLabelList;
    return this;
  }

  public OpenGrayReleaseRuleItemDTO addClientLabelListItem(String clientLabelListItem) {
    if (this.clientLabelList == null) {
      this.clientLabelList = new ArrayList<>();
    }
    this.clientLabelList.add(clientLabelListItem);
    return this;
  }

  /**
   * 客户端标签列表，通过标签来识别可以获取灰度配置的客户端
   * @return clientLabelList
   */
  @javax.annotation.Nullable
  public List<String> getClientLabelList() {
    return clientLabelList;
  }

  public void setClientLabelList(@javax.annotation.Nullable List<String> clientLabelList) {
    this.clientLabelList = clientLabelList;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    OpenGrayReleaseRuleItemDTO openGrayReleaseRuleItemDTO = (OpenGrayReleaseRuleItemDTO) o;
    return Objects.equals(this.clientAppId, openGrayReleaseRuleItemDTO.clientAppId) &&
        Objects.equals(this.clientIpList, openGrayReleaseRuleItemDTO.clientIpList) &&
        Objects.equals(this.clientLabelList, openGrayReleaseRuleItemDTO.clientLabelList);
  }

  @Override
  public int hashCode() {
    return Objects.hash(clientAppId, clientIpList, clientLabelList);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class OpenGrayReleaseRuleItemDTO {\n");
    sb.append("    clientAppId: ").append(toIndentedString(clientAppId)).append("\n");
    sb.append("    clientIpList: ").append(toIndentedString(clientIpList)).append("\n");
    sb.append("    clientLabelList: ").append(toIndentedString(clientLabelList)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>(Arrays.asList("clientAppId", "clientIpList", "clientLabelList"));

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>(0);
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to OpenGrayReleaseRuleItemDTO
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!OpenGrayReleaseRuleItemDTO.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in OpenGrayReleaseRuleItemDTO is not found in the empty JSON string", OpenGrayReleaseRuleItemDTO.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!OpenGrayReleaseRuleItemDTO.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `OpenGrayReleaseRuleItemDTO` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("clientAppId") != null && !jsonObj.get("clientAppId").isJsonNull()) && !jsonObj.get("clientAppId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `clientAppId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("clientAppId").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("clientIpList") != null && !jsonObj.get("clientIpList").isJsonNull() && !jsonObj.get("clientIpList").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `clientIpList` to be an array in the JSON string but got `%s`", jsonObj.get("clientIpList").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("clientLabelList") != null && !jsonObj.get("clientLabelList").isJsonNull() && !jsonObj.get("clientLabelList").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `clientLabelList` to be an array in the JSON string but got `%s`", jsonObj.get("clientLabelList").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!OpenGrayReleaseRuleItemDTO.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'OpenGrayReleaseRuleItemDTO' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<OpenGrayReleaseRuleItemDTO> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(OpenGrayReleaseRuleItemDTO.class));

       return (TypeAdapter<T>) new TypeAdapter<OpenGrayReleaseRuleItemDTO>() {
           @Override
           public void write(JsonWriter out, OpenGrayReleaseRuleItemDTO value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public OpenGrayReleaseRuleItemDTO read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of OpenGrayReleaseRuleItemDTO given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of OpenGrayReleaseRuleItemDTO
   * @throws IOException if the JSON string is invalid with respect to OpenGrayReleaseRuleItemDTO
   */
  public static OpenGrayReleaseRuleItemDTO fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, OpenGrayReleaseRuleItemDTO.class);
  }

  /**
   * Convert an instance of OpenGrayReleaseRuleItemDTO to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

